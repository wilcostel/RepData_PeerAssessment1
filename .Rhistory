library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('plot1.png')
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('../ReproducibleResearch/figure/plot1.png')
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png("C://Users/Acer E1-731/ReproducibleResearch/figure/plot1.png")
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('C://Users/Acer E1-731/ReproducibleResearch/figure/plot1.png')
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('plot1.png')
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
--png('plot1.png')
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
head(data)
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('plot1.png')
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('C:\Users\Acer E1-731\ReproducibleResearch\figure\plot1.png')
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png("C:\Users\Acer E1-731\ReproducibleResearch\figure\plot1.png")
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png("plot1.png")
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps <- mean(steps$steps, na.rm = TRUE)
median_steps <- median(steps$steps, na.rm = TRUE)
mean_steps
median_steps
interval <- data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
png('plot2.png')
g<-ggplot(interval, aes(x=interval, y=steps))
g<-g + geom_line(color = "firebrick")
print(g)
dev.off()
interval[which.max(interval$steps),]
sum(is.na(data$steps))
data_full <- data
nas <- is.na(data_full$steps)
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
data_full$steps[nas] <- avg_interval[as.character(data_full$interval[nas])]
sum(is.na(data_full$steps))
steps_full <- data_full %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('plot3.png')
g<-ggplot(steps_full, aes(x = steps))
g<-g +   geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day, including missing values", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps_full <- mean(steps_full$steps, na.rm = TRUE)
median_steps_full <- median(steps_full$steps, na.rm = TRUE)
mean_steps_full
median_steps_full
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "Saturday" | weekdays(data_full$date) == "Sunday", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
interval_full <- data_full %>%
group_by(interval, weektype) %>%
summarise(steps = mean(steps))
png('plot5.png')
g <- ggplot(interval_full, aes(x=interval, y=steps, color = weektype))
g<- g + geom_line()
g<-g +facet_wrap(~weektype, ncol = 1, nrow=2)
print(g)
dev.off()
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "Saturday" | weekdays(data_full$date) == "Sunday", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
interval_full <- data_full %>%
group_by(interval, weektype) %>%
summarise(steps = mean(steps))
interval_full
data_full
data
weekdays(data_full$date)
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png("plot1.png")
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps <- mean(steps$steps, na.rm = TRUE)
median_steps <- median(steps$steps, na.rm = TRUE)
mean_steps
median_steps
interval <- data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
png('plot2.png')
g<-ggplot(interval, aes(x=interval, y=steps))
g<-g + geom_line(color = "firebrick")
print(g)
dev.off()
interval[which.max(interval$steps),]
sum(is.na(data$steps))
data_full <- data
nas <- is.na(data_full$steps)
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
data_full$steps[nas] <- avg_interval[as.character(data_full$interval[nas])]
sum(is.na(data_full$steps))
steps_full <- data_full %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('plot3.png')
g<-ggplot(steps_full, aes(x = steps))
g<-g +   geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day, including missing values", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps_full <- mean(steps_full$steps, na.rm = TRUE)
median_steps_full <- median(steps_full$steps, na.rm = TRUE)
mean_steps_full
median_steps_full
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "zaterdag" | weekdays(data_full$date) == "zondag", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
interval_full <- data_full %>%
group_by(interval, weektype) %>%
summarise(steps = mean(steps))
png('plot5.png')
g <- ggplot(interval_full, aes(x=interval, y=steps, color = weektype))
g<- g + geom_line()
g<-g +facet_wrap(~weektype, ncol = 1, nrow=2)
print(g)
dev.off()
getwd()
setwd("C:/Users/Acer E1-731/ReproducibleResearch")
getwd()
data
png("figure/dataplot1.png")
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps <- mean(steps$steps, na.rm = TRUE)
median_steps <- median(steps$steps, na.rm = TRUE)
mean_steps
median_steps
interval <- data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
png('figure/plot2.png')
g<-ggplot(interval, aes(x=interval, y=steps))
g<-g + geom_line(color = "firebrick")
print(g)
dev.off()
interval[which.max(interval$steps),]
sum(is.na(data$steps))
data_full <- data
nas <- is.na(data_full$steps)
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
data_full$steps[nas] <- avg_interval[as.character(data_full$interval[nas])]
sum(is.na(data_full$steps))
steps_full <- data_full %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('figure/plot3.png')
g<-ggplot(steps_full, aes(x = steps))
g<-g +   geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day, including missing values", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps_full <- mean(steps_full$steps, na.rm = TRUE)
median_steps_full <- median(steps_full$steps, na.rm = TRUE)
mean_steps_full
median_steps_full
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "zaterdag" | weekdays(data_full$date) == "zondag", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
interval_full <- data_full %>%
group_by(interval, weektype) %>%
summarise(steps = mean(steps))
png('figure/plot5.png')
g <- ggplot(interval_full, aes(x=interval, y=steps, color = weektype))
g<- g + geom_line()
g<-g +facet_wrap(~weektype, ncol = 1, nrow=2)
print(g)
dev.off()
getwd()
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
setwd("C:/Users/Acer E1-731/ReproducibleResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png("figure/plot1.png")
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps <- mean(steps$steps, na.rm = TRUE)
median_steps <- median(steps$steps, na.rm = TRUE)
mean_steps
median_steps
interval <- data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
png('figure/plot2.png')
g<-ggplot(interval, aes(x=interval, y=steps))
g<-g + geom_line(color = "firebrick")
print(g)
dev.off()
interval[which.max(interval$steps),]
sum(is.na(data$steps))
data_full <- data
nas <- is.na(data_full$steps)
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
data_full$steps[nas] <- avg_interval[as.character(data_full$interval[nas])]
sum(is.na(data_full$steps))
steps_full <- data_full %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('figure/plot3.png')
g<-ggplot(steps_full, aes(x = steps))
g<-g +   geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day, including missing values", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps_full <- mean(steps_full$steps, na.rm = TRUE)
median_steps_full <- median(steps_full$steps, na.rm = TRUE)
mean_steps_full
median_steps_full
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "zaterdag" | weekdays(data_full$date) == "zondag", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
interval_full <- data_full %>%
group_by(interval, weektype) %>%
summarise(steps = mean(steps))
png('figure/plot5.png')
g <- ggplot(interval_full, aes(x=interval, y=steps, color = weektype))
g<- g + geom_line()
g<-g +facet_wrap(~weektype, ncol = 1, nrow=2)
print(g)
dev.off()
library(knitr)
library(dplyr)
library(lubridate)
library(ggplot2)
setwd("C:/Users/Acer E1-731/ReproducibleResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character",
"integer"))
data$date <- ymd(data$date)
str(data)
head(data)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png("figure/plot1.png")
g<-ggplot(steps, aes(x = steps))
g<- g +  geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps <- mean(steps$steps, na.rm = TRUE)
median_steps <- median(steps$steps, na.rm = TRUE)
mean_steps
median_steps
interval <- data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
png('figure/plot2.png')
g<-ggplot(interval, aes(x=interval, y=steps))
g<-g + geom_line(color = "firebrick")
print(g)
dev.off()
interval[which.max(interval$steps),]
sum(is.na(data$steps))
data_full <- data
nas <- is.na(data_full$steps)
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
data_full$steps[nas] <- avg_interval[as.character(data_full$interval[nas])]
sum(is.na(data_full$steps))
steps_full <- data_full %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
png('figure/plot3.png')
g<-ggplot(steps_full, aes(x = steps))
g<-g +   geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day, including missing values", x = "Steps per day", y = "Frequency")
print(g)
dev.off()
mean_steps_full <- mean(steps_full$steps, na.rm = TRUE)
median_steps_full <- median(steps_full$steps, na.rm = TRUE)
mean_steps_full
median_steps_full
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "zaterdag" | weekdays(data_full$date) == "zondag", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
interval_full <- data_full %>%
group_by(interval, weektype) %>%
summarise(steps = mean(steps))
png('figure/plot5.png')
g <- ggplot(interval_full, aes(x=interval, y=steps, color = weektype))
g<- g + geom_line()
g<-g +facet_wrap(~weektype, ncol = 1, nrow=2)
print(g)
dev.off()
